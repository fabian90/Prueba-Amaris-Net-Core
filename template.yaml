AWSTemplateFormatVersion: '2010-09-09'
Description: Plantilla simple para lanzar una instancia EC2 Amazon Linux 2 para pruebas/desarrollo

Parameters:
  KeyName:
    Description: Nombre del par de llaves EC2 existente para acceso SSH
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Description: Tipo de instancia EC2
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t3.micro
  AmiId:
    Description: AMI pública de Amazon Linux 2 (actualiza según región si es necesario)
    Type: AWS::EC2::Image::Id
    Default: ami-0c02fb55956c7d316

Resources:
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Permitir solo SSH desde cualquier IP
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref AmiId
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y git
          yum install -y dotnet-sdk-6.0
          cd /home/ec2-user
          git clone https://github.com/fabian90/Prueba-Amaris-Net-Core.git
          cd Prueba-Amaris-Net-Core/amaris.Api
          dotnet restore
          dotnet publish -c Release -o out
          nohup dotnet out/amaris.Api.dll &

Outputs:
  InstanceId:
    Description: ID de la instancia EC2
    Value: !Ref EC2Instance
  PublicIP:
    Description: IP pública asignada a la instancia
    Value: !GetAtt EC2Instance.PublicIp
  SecurityGroupId:
    Description: ID del Security Group creado
    Value: !Ref EC2SecurityGroup