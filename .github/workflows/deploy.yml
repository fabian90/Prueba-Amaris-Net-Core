name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Se ejecuta cuando haces push a la rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    environment: production  # Aquí especificamos el entorno de despliegue

    steps:
      # 1. Limpiar la caché (opcional)
      - name: Clear the cache
        run: |
          rm -rf ~/.cache

      # 2. Obtener el código desde el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # 3. Configurar AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Región en la que deseas desplegar

      # 4. Establecer la variable de entorno IMAGE_VERSION
      - name: Set image version in environment
        run: |
          echo "IMAGE_VERSION=latest" >> $GITHUB_ENV

      # 5. Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t amaris-api:${{ env.IMAGE_VERSION }} .

      # 6. Loguearse en AWS ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      # 7. Etiquetar la imagen
      - name: Tag Docker image
        run: |
          docker tag amaris-api:${{ env.IMAGE_VERSION }} ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/amaris-api:${{ env.IMAGE_VERSION }}

      # 8. Subir la imagen a ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/amaris-api:${{ env.IMAGE_VERSION }}

      # 9. Desplegar la imagen Docker en EC2 vía SSH
      - name: Deploy Docker image on EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/amaris-api:${{ env.IMAGE_VERSION }} && docker stop amaris-api || true && docker rm amaris-api || true && docker run -d --name amaris-api -p 80:80 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/amaris-api:${{ env.IMAGE_VERSION }}"
          rm ec2_key.pem
