name: Deploy to AWS EC2

on:
  push:
    branches:
      - main  # Se ejecuta cuando haces push a la rama principal

jobs:
  build:
    runs-on: ubuntu-latest

    environment: production  # Aquí especificamos el entorno de despliegue

    steps:
      # 1. Limpiar la caché (opcional)
      - name: Clear the cache
        run: |
          rm -rf ~/.cache

      # 2. Obtener el código desde el repositorio
      - name: Checkout code
        uses: actions/checkout@v2

      # 3. Configurar AWS CLI
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Región en la que deseas desplegar

      # 4. Establecer la variable de entorno IMAGE_VERSION
      - name: Set image version in environment
        run: |
          echo "IMAGE_VERSION=latest" >> $GITHUB_ENV

      # 5. Publicar la aplicación .NET
      - name: Publicar aplicación
        run: |
          dotnet publish amaris.Api/amaris.Api.csproj -c Release -o ./publish

      # 6. Copiar archivos publicados a EC2 vía SCP
      - name: Copiar archivos a EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          scp -o StrictHostKeyChecking=no -i ec2_key.pem -r ./publish/* $EC2_USER@$EC2_HOST:/home/$EC2_USER/amaris-api/
          rm ec2_key.pem

      # 7. Ejecutar la aplicación en EC2 vía SSH
      - name: Ejecutar aplicación en EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$EC2_KEY" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST "pkill -f 'dotnet amaris.Api.dll' || true; cd /home/$EC2_USER/amaris-api && nohup dotnet amaris.Api.dll > output.log 2>&1 &"
          rm ec2_key.pem
